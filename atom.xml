<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沧海一声笑__</title>
  
  
  <link href="https://goofyww.github.io/atom.xml" rel="self"/>
  
  <link href="https://goofyww.github.io/"/>
  <updated>2021-05-14T07:17:35.929Z</updated>
  <id>https://goofyww.github.io/</id>
  
  <author>
    <name>goofyww</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下 cat grep快速查找内容</title>
    <link href="https://goofyww.github.io/2021/05/14/linux%E4%B8%8B-cat-grep%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%86%85%E5%AE%B9/"/>
    <id>https://goofyww.github.io/2021/05/14/linux%E4%B8%8B-cat-grep%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE%E5%86%85%E5%AE%B9/</id>
    <published>2021-05-14T07:16:40.000Z</published>
    <updated>2021-05-14T07:17:35.929Z</updated>
    
    <content type="html"><![CDATA[<p>部署在Linux下的程序，日志很多，而且实时滚动，可以通过以下方式快速查找自己自己想要的内容：</p><p>cat log.txt | grep ‘ERROR’ -A 5</p><span id="more"></span><p>意思是，在log.txt文件中，查找ERROR字符，并显示ERROR所在行的之后5行</p><p>cat log.txt | grep ‘ERROR’ -B 5  之前5行</p><p>cat log.txt | grep ‘ERROR’ -C 5 前后5行</p><p>cat log.txt | grep -v ‘ERROR’ 排除ERROR所在的行</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;部署在Linux下的程序，日志很多，而且实时滚动，可以通过以下方式快速查找自己自己想要的内容：&lt;/p&gt;
&lt;p&gt;cat log.txt | grep ‘ERROR’ -A 5&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>i++ 的线程安全问题</title>
    <link href="https://goofyww.github.io/2021/05/11/i-%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/"/>
    <id>https://goofyww.github.io/2021/05/11/i-%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/</id>
    <published>2021-05-10T17:55:51.000Z</published>
    <updated>2021-05-10T17:58:31.571Z</updated>
    
    <content type="html"><![CDATA[<ul><li>① 方法一<br>使用 <code>AtomicXX</code> 系列的包装类</li></ul><span id="more"></span><ul><li><p>② 方法二<br>使用 <code>synchronized</code> 针对 i 的 写操作进行加锁</p></li><li><p>③ 方法三<br>使用无锁编程 CAS 的方式</p></li></ul><p>注：<code>volatile</code> 解决了线程间共享变量的可见性问题，使用 <code>volatile</code> 会增加性能开销，<code>volatile</code> 并不能解决线程同步问题。</p><p>加锁的同时也会增加性能开销。</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;① 方法一&lt;br&gt;
使用 &lt;code&gt;AtomicXX&lt;/code&gt; 系列的包装类&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Java" scheme="https://goofyww.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://goofyww.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>VMware- VMware workstation 与 VMware Vsphere client 虚拟机 v2v</title>
    <link href="https://goofyww.github.io/2021/05/11/VMware-VMware-workstation-%E4%B8%8E-VMware-Vsphere-client-%E8%99%9A%E6%8B%9F%E6%9C%BA-v2v/"/>
    <id>https://goofyww.github.io/2021/05/11/VMware-VMware-workstation-%E4%B8%8E-VMware-Vsphere-client-%E8%99%9A%E6%8B%9F%E6%9C%BA-v2v/</id>
    <published>2021-05-10T17:48:55.000Z</published>
    <updated>2021-05-10T17:56:56.219Z</updated>
    
    <content type="html"><![CDATA[<p>这几日一直在忙甲方权限系统对接的工作，遇到了很多和环境配置相关的坑，已经连续半个月没有全身心的投入敲代码的感觉中了，一天不敲，确实感觉到了自己的退步。今日在学习群里看到技术大佬们都很努力的在学习。之前早有耳闻简书的大名。今日开此账号，也来记录一下自己学习的点点滴滴。</p><span id="more"></span>       <p>话不多说。进入正题。今天遇到的问题是：</p><h2 id="VMware-workstation-导出的vmdk文件无法在-VMware-Vsphere-client-建立清单">VMware workstation 导出的vmdk文件无法在  VMware Vsphere client 建立清单</h2><p>问题产生原因 ：</p><ul><li>vmware workstation 常用于 IT从业者、个人在个人计算机上面搭建虚拟机 学习爱好之用。</li><li>vmware Vsphere client 则是常用于 企业级 在一台物理服务器上搭建多台虚拟机 工作开发之用。</li></ul><p>两者虽都是搭建虚拟机软件，但是侧重点不同。但这只是针对它们各自的作用来说的，导致无法将甲方提供的虚拟机（.vmdk）安装成功的原因是因为两款软件的配置和系统兼容性的不同。</p><h2 id="VMware-converter">VMware converter</h2><p>这是一个神器，这是一个神器，这是一个神器！！<br>重要的事情说三遍，这个软件是vmware免费软件，注册个账号就可以下载。<br>开始我以为这个机器只能把物理机转化为虚拟机，后来发现它啥都能行。</p><p>点击convert machine按钮<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c60824a55ef?w=907&amp;h=715&amp;f=png&amp;s=78603" alt=""><br>首先选择要转化的源系统是什么。</p><p>powered on下面有三种选择：<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c758b7de488?w=553&amp;h=243&amp;f=png&amp;s=9213" alt=""><br>看到下拉箭头下面那行字了吗？</p><p><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c7c4ca66f69?w=527&amp;h=135&amp;f=png&amp;s=7196" alt=""><br>如果你和我一样迁移的是linux虚拟机，选择第二种就行了。<br>但我的虚拟机当时关闭了，所以我选的是powered off.<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c80f50b813b?w=592&amp;h=275&amp;f=png&amp;s=12201" alt=""><br>第二行选择正是我需要的，然后<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c86c1962e2f?w=598&amp;h=251&amp;f=png&amp;s=11660" alt=""><br>选择文件，.vmk格式的文件。注意，文件名不能有中文，会报错！！！<br>然后下一步，选择目的地址<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c8acbbd4a7c?w=750&amp;h=272&amp;f=png&amp;s=14344" alt=""><br>再然后就是选择存储的位置，网络位置等等。无需改动，除非你有特殊需求，在这里就不一一介绍了。<br>最后，成功！！！<br><img src="https://user-gold-cdn.xitu.io/2020/4/4/17143c8e0730c333?w=731&amp;h=195&amp;f=png&amp;s=32455" alt=""><br>再次，回到vsphere打开刚刚新迁移过来的虚拟机，可爱的桌面就出现了，完美解决！！！</p><p>转自：<a href="https://www.cnblogs.com/cuncunjun/p/6663687.html">https://www.cnblogs.com/cuncunjun/p/6663687.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这几日一直在忙甲方权限系统对接的工作，遇到了很多和环境配置相关的坑，已经连续半个月没有全身心的投入敲代码的感觉中了，一天不敲，确实感觉到了自己的退步。今日在学习群里看到技术大佬们都很努力的在学习。之前早有耳闻简书的大名。今日开此账号，也来记录一下自己学习的点点滴滴。&lt;/p&gt;</summary>
    
    
    
    <category term="VMware" scheme="https://goofyww.github.io/categories/VMware/"/>
    
    
    <category term="VMware" scheme="https://goofyww.github.io/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>实体类生成UUID主键</title>
    <link href="https://goofyww.github.io/2021/05/11/%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%94%9F%E6%88%90UUID%E4%B8%BB%E9%94%AE/"/>
    <id>https://goofyww.github.io/2021/05/11/%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%94%9F%E6%88%90UUID%E4%B8%BB%E9%94%AE/</id>
    <published>2021-05-10T17:40:44.000Z</published>
    <updated>2021-05-10T17:46:23.012Z</updated>
    
    <content type="html"><![CDATA[<p>实体类生成UUID主键</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Entity</span><br><span class="line">public class Gril &#123;</span><br><span class="line"> </span><br><span class="line">    @Id @GeneratedValue(generator=&quot;system-uuid&quot;)</span><br><span class="line">    @GenericGenerator(name=&quot;system-uuid&quot;, strategy = &quot;uuid&quot;)</span><br><span class="line">    private String id;</span><br><span class="line">    //省略 ...</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;实体类生成UUID主键&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://goofyww.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://goofyww.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>浅谈 DevOps</title>
    <link href="https://goofyww.github.io/2021/05/11/%E6%B5%85%E8%B0%88-DevOps/"/>
    <id>https://goofyww.github.io/2021/05/11/%E6%B5%85%E8%B0%88-DevOps/</id>
    <published>2021-05-10T17:13:21.000Z</published>
    <updated>2021-05-10T17:37:56.631Z</updated>
    
    <content type="html"><![CDATA[<p>听说这个词汇还是年前时候的事情 ，当时第一个反应是一种新技术的又出现了，后来经过上网查找相关的资料，大致上我认为的 <strong>DevOps</strong> 是一种 <strong>软件开发的协作关系</strong>。</p><span id="more"></span><h3 id="软件开发方式演进">软件开发方式演进</h3><hr><ul><li><p><strong>瀑布流开发</strong></p><p>阶段性开发，这种开发方式在政府项目中广受推崇。 按时间线阶段划分 ，在上一个人员的任务完成之后再移交给下一层的人员来进行作业。</p><p><code>开发  ——&gt;  测试  ——&gt;  运维  ——&gt;  运营</code></p><p>瀑布开发模式的缺点是<strong>限制了开发期间团队间的交互</strong>。而且整体效率并不是很快。</p></li><li><p><strong>敏捷开发</strong></p><p>敏捷开发最初并不是用在软件开发领域的，它是由上世纪八十年代的日本丰田汽车的一套企业文化演变而来</p><blockquote><p><strong>丰田精益七原则</strong></p><ul><li>① 杜绝浪费</li><li>② 内建质量</li><li>③ 创建知识（放大学习）</li><li>④ 延迟决策（尽量延迟决定）</li><li>⑤ 快速交付</li><li>⑥ 团队授权</li><li>⑦ 全局优化</li></ul></blockquote><p>敏捷宣言诞生于2001年的美国，它制定了在软件系统开发领域的 十二条原则 和 四大核心</p><blockquote><p><strong>四大核心</strong></p><ul><li>① 个体和互动高于流程和工具</li><li>② 工作的软件高于详尽的文档</li><li>③ 客户合作高于合同谈判</li><li>④ 响应变化高于遵循计划</li></ul></blockquote><blockquote><p><strong>十二条原则</strong></p><ul><li>通过早期和连续型的高价值工作交付满足 “客户”</li><li>大工作分成可以迅速完成的较小组成部分</li><li>识别最好的工作是从自我组织的团队中出现的</li><li>为积极员工提供他们需要的环境和支持，并相信他们可以实现完成工作</li><li>创建可以改善可持续工作的流程</li><li>维持完整工作的不变的步调</li><li>欢迎改变的需求，即使是在项目后期</li><li>在项目期间每天与项目团队和业务所有者开会</li><li>在定期修正期间，让团队反映如何能高效，然后进行相应的行为调整</li><li>通过完成的工作量计量工作进度</li><li>不断的追求完善</li><li>利用调整获得竞争优势</li></ul></blockquote></li></ul><p>在我看来，所谓 “敏捷开发” 更像是一种 积极向上的工作态度 ，化繁为简的工作方式 ，通过高效率的交流 ，调整工作的节奏和工作方式的协作方式。</p><ul><li><p><strong>DevOps</strong><br>在整个项目过程中，每个人都是DevOps的一部分</p><p><code>开发 &lt;=&gt; 测试 &lt;=&gt; 运维</code></p><p>在看别人写的关于DevOps理解时，有人形象把其比作为 高速车道 的<strong>三条车道</strong> ，每次在本条车道提速到临界值的同时，再尝试切换到旁边的高速道Plus。</p></li><li><p>① <strong>保持系统运作流程不可中断，随时提升和优化工作流程</strong></p></li><li><p>② <strong>建立反馈机制，确保能提供持续不断的反馈循环，且这些反馈不被忽视</strong></p></li><li><p>③ <strong>持续不断的学习和汲取经验，不停的进步，快速的失败</strong></p></li></ul><p>现代软件开发的五项活动 使 DevOps 成为现实</p><blockquote><ul><li><strong>持续集成</strong></li><li><strong>持续交付</strong></li><li><strong>云基础架构</strong></li><li><strong>测试自动化</strong></li><li><strong>配置管理</strong></li></ul></blockquote><p>现在很多大型互联网产品都采用DevOps的开发方式 ，这也十分符合互联网不断迭代的业务需求，现在很火的 Docker  + K8s 就是一种DevOps的软件开发的协作关系.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;听说这个词汇还是年前时候的事情 ，当时第一个反应是一种新技术的又出现了，后来经过上网查找相关的资料，大致上我认为的 &lt;strong&gt;DevOps&lt;/strong&gt; 是一种 &lt;strong&gt;软件开发的协作关系&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="思维" scheme="https://goofyww.github.io/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
    <category term="思维" scheme="https://goofyww.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>投资方向规划</title>
    <link href="https://goofyww.github.io/2021/05/10/%E6%8A%95%E8%B5%84%E6%96%B9%E5%90%91%E8%A7%84%E5%88%92/"/>
    <id>https://goofyww.github.io/2021/05/10/%E6%8A%95%E8%B5%84%E6%96%B9%E5%90%91%E8%A7%84%E5%88%92/</id>
    <published>2021-05-10T14:31:56.000Z</published>
    <updated>2021-05-10T17:36:27.380Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e23aa03121687a84751a8c7a29e1ef5bc48ae4e677acbb27ab949788571cbbac">f4aa9fb63d4e7fe32bfec9616c4c290016c9db424d11e2915a67b70de96af50e34a3b554139b01a88d4dc9e3586f2b75a97e9fc0a07ccad1db357b460e9df6536d748557901c3127903a462120125ac460dbd55e54594c6ddf9917b78cf7b187c59ad2a8b13dd58714b8caed3346408a5460fb9f3d54ba99d129a09a5d133224bf6496703dc32c8ceba152629b95d93b5601543aa4fdec724230be05540a09b4b1900af0de3874d1504022d09121ab4f9e2019bee47ef3439b2fc55c3e894bdcdd8a883824325412fe45824daf9bfd658f304a9a792fce68ebd8a55747f24e859f930825cda7b4322c8c5c97ecbe16b3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">本篇为加密文章，请输入密码进行查看</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">本篇为加密文章，请输入密码进行查看</summary>
    
    
    
    <category term="生活" scheme="https://goofyww.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="https://goofyww.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>你好，2021 | 博客迁移记录</title>
    <link href="https://goofyww.github.io/2021/05/10/%E4%BD%A0%E5%A5%BD%EF%BC%8C2021-%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%AE%B0%E5%BD%95/"/>
    <id>https://goofyww.github.io/2021/05/10/%E4%BD%A0%E5%A5%BD%EF%BC%8C2021-%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%AE%B0%E5%BD%95/</id>
    <published>2021-05-09T18:05:40.000Z</published>
    <updated>2021-05-10T17:58:05.630Z</updated>
    
    <content type="html"><![CDATA[<p>一直在考虑建立属于自己的博客网站，用于记录工作和生活，如今得偿所愿。也幸好在其他平台上记录了些琐碎经历，故本文记录一下掘金博文迁移记录～</p><span id="more"></span><ul><li>/2021/05/11/i-的线程安全问题</li><li>/2021/05/11/VMware-VMware-workstation-与-VMware-Vsphere-client-虚拟机-v2v</li><li>/2021/05/11/实体类生成UUID主键</li><li>/2021/05/11/浅谈-DevOps</li><li>/2021/05/09/判断dll是32位还是64位的简单方法（实测有效）</li><li>/2021/05/09/Gradle 的一些常用命令</li><li>/2021/05/09/IntelliJ IDEA 安装过程</li><li>/2021/05/08/IntelliJ IDEA常用快捷键</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直在考虑建立属于自己的博客网站，用于记录工作和生活，如今得偿所愿。也幸好在其他平台上记录了些琐碎经历，故本文记录一下掘金博文迁移记录～&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>判断dll是32位还是64位的简单方法（实测有效）</title>
    <link href="https://goofyww.github.io/2021/05/09/%E5%88%A4%E6%96%ADdll%E6%98%AF32%E4%BD%8D%E8%BF%98%E6%98%AF64%E4%BD%8D%E7%9A%84%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95%EF%BC%88%E5%AE%9E%E6%B5%8B%E6%9C%89%E6%95%88%EF%BC%89/"/>
    <id>https://goofyww.github.io/2021/05/09/%E5%88%A4%E6%96%ADdll%E6%98%AF32%E4%BD%8D%E8%BF%98%E6%98%AF64%E4%BD%8D%E7%9A%84%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95%EF%BC%88%E5%AE%9E%E6%B5%8B%E6%9C%89%E6%95%88%EF%BC%89/</id>
    <published>2021-05-09T15:08:29.000Z</published>
    <updated>2021-05-09T17:42:33.690Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简便方法：</strong></p><p>直接用记事本或者notepad++打开exe文件（dll文件），会有很多乱码，不要头疼，接下来只需要在第二段中找到PE两个字母，在其后的不远出会出现d? 或者L。若是d，则证明该程序是64位；若是L，则证明是32位。</p><span id="more"></span><p><img src="https://i.loli.net/2021/05/10/j3OEvpbdJ5DMFeG.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;简便方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接用记事本或者notepad++打开exe文件（dll文件），会有很多乱码，不要头疼，接下来只需要在第二段中找到PE两个字母，在其后的不远出会出现d? 或者L。若是d，则证明该程序是64位；若是L，则证明是32位。&lt;/p&gt;</summary>
    
    
    
    <category term="c++" scheme="https://goofyww.github.io/categories/c/"/>
    
    
    <category term="c++" scheme="https://goofyww.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Gradle的一些常用命令</title>
    <link href="https://goofyww.github.io/2021/05/09/Gradle%20%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://goofyww.github.io/2021/05/09/Gradle%20%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-05-09T11:14:27.000Z</published>
    <updated>2021-05-09T17:40:13.457Z</updated>
    
    <content type="html"><![CDATA[<p>笔者之前在掘金上记录的一些关于Gradle的常用命令</p><span id="more"></span><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>$ gradle init --type pom</code></td><td>Maven项目转换Gradle(在需要转换的根目录下执行此命令)</td></tr><tr><td><code>$ gradle init --type java-application</code></td><td>创建一个gradle Demo的项目</td></tr><tr><td><code>$ gradle idea</code></td><td>根据build.gradle和setting.gradle文件生成idea项目</td></tr><tr><td><code>$ gradle tasks --all</code></td><td>查看此项目有哪些任务如上，但上面的命令只能看到有group的，如果查看全部的任务需要使用参数all</td></tr><tr><td><code>$ gradle build</code></td><td>构建并单元测试</td></tr><tr><td><code>$ gradle build -x test</code></td><td>gradle 跳过测试直接编译</td></tr><tr><td><code>$ gradle test</code></td><td>执行单元测试</td></tr><tr><td><code>$ gradle run</code></td><td>运行</td></tr><tr><td><code>$ gradle clean</code></td><td>删除build目录</td></tr><tr><td><code>$ gradle jar</code></td><td>打jar包</td></tr><tr><td><code>$ gradle clean war</code></td><td>打war包</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;笔者之前在掘金上记录的一些关于Gradle的常用命令&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="https://goofyww.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="运维" scheme="https://goofyww.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 安装过程</title>
    <link href="https://goofyww.github.io/2021/05/09/IntelliJ%20IDEA%20%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"/>
    <id>https://goofyww.github.io/2021/05/09/IntelliJ%20IDEA%20%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</id>
    <published>2021-05-09T09:07:19.000Z</published>
    <updated>2021-05-16T15:56:38.736Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a4e43bb2e30b2f2a045af458ab0ea68f2e71ff7eb8832318bcfbe3b03fecf619"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">密码提示：博主的QQ</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">本篇为加密文章，请输入密码进行查看.</summary>
    
    
    
    <category term="工具" scheme="https://goofyww.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://goofyww.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA常用快捷键</title>
    <link href="https://goofyww.github.io/2021/05/08/IntelliJ%20IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://goofyww.github.io/2021/05/08/IntelliJ%20IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2021-05-08T05:15:28.000Z</published>
    <updated>2021-05-16T15:56:42.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置">设置</h2><p>智能友好提示导入类</p><p><code>Settings——&gt;Editor——&gt;General——&gt;Auto Import——&gt; [√] Add unambiguous imports on the fly</code></p><h2 id="快捷键">快捷键</h2><span id="more"></span><ul><li>mac版</li></ul><table><thead><tr><th>键位</th><th>描述</th></tr></thead><tbody><tr><td><code>command/⌘ + shift/⏏︎ + A</code></td><td>搜索帮助    (Help)</td></tr><tr><td><code>shift/⏏︎ + shift/⏏︎</code></td><td>万能搜索</td></tr><tr><td><code>command/⌘ + shift/⏏︎ + T</code></td><td>创建单元测试</td></tr><tr><td><code>command/⌘ + option/⌥ + T</code></td><td>包裹代码至特定代码块,(try/catch)</td></tr><tr><td><code>command/⌘ + option/⌥ + M</code></td><td>提取方法(Extract Method)</td></tr><tr><td><code>command/⌘ + shift/⏏︎ + R</code></td><td>全局搜索项目中的类</td></tr><tr><td><code>command/⌘ + option/⌥ + L</code></td><td>一键格式化代码</td></tr><tr><td><code>command/⌘ + shift/⏏︎ + ↑/↓</code></td><td>上下移动选中的代码</td></tr><tr><td><code>command/⌘ + shift/⏏︎ + U</code></td><td>大小写格式化选中的代码</td></tr><tr><td><code>command/⌘ + 左边栏代号</code></td><td>跳入对应工作区</td></tr><tr><td><code>command/⌘ + [</code></td><td>上一个windows窗口</td></tr><tr><td><code>command/⌘ + ]</code></td><td>下一个windows窗口</td></tr><tr><td><code>command/⌘ + E</code></td><td>最近使用的文件 (Recent files)</td></tr><tr><td><code>ESC</code></td><td>跳入代码区</td></tr><tr><td><code>fn + F3</code></td><td>为代码标记(取消)书签</td></tr><tr><td><code>option/⌥ + fn + F3</code></td><td>为代码标记(取消)带编号书签 , 通过 <code>control/⌃</code> + 编号 进行跳转</td></tr></tbody></table><ul><li>win版</li></ul><table><thead><tr><th>键位</th><th>描述</th></tr></thead><tbody><tr><td><code>Ctrl + Shift + A</code></td><td>搜索帮助    (Help)</td></tr><tr><td><code>Shift + Shift</code></td><td>万能搜索</td></tr><tr><td><code>Ctrl + H</code></td><td>全局搜索字符串 find in path</td></tr><tr><td><code>Ctrl + Shift + T</code></td><td>全局搜索引入Jar包的类</td></tr><tr><td><code>Ctrl + Shift + R</code></td><td>全局搜索项目中的类</td></tr><tr><td><code>Ctrl + O</code></td><td>搜索方法</td></tr><tr><td><code>Ctrl + Alt + Shift + F11</code></td><td>全局搜索属性/方法</td></tr><tr><td><code>Ctrl + Shift + I</code></td><td>小窗口显示类细节</td></tr><tr><td><code>Ctrl + Alt + L</code></td><td>一键格式化代码</td></tr><tr><td><code>Ctrl + Shift + ↑/↓</code></td><td>当前类方法跳转 ↑ 上一个  ↓ 下一个</td></tr><tr><td><code>Ctrl + Alt + T</code></td><td>包裹代码至特定代码块,(try/catch)</td></tr><tr><td><code>Ctrl + U</code></td><td>DeBug调试查看计算表达式</td></tr><tr><td><code>Ctrl + T</code></td><td>快速查看继承结构</td></tr><tr><td><code>ESC</code></td><td>跳入代码区</td></tr><tr><td><code>Alt + 左边栏代号</code></td><td>跳入对应工作区</td></tr><tr><td><code>Ctrl + Alt + ]</code></td><td>下一个windows窗口</td></tr><tr><td><code>Ctrl + Alt + [</code></td><td>上一个windows窗口</td></tr><tr><td><code>Ctrl + E</code></td><td>最近使用的文件 (Recent files)</td></tr><tr><td><code>Ctrl + Shift + E</code></td><td>最近更改的文件 (Recent changed files)</td></tr><tr><td><code>Ctrl + Q</code></td><td>跳转到上一次编辑的代码处</td></tr><tr><td><code>Alt + 左箭头</code></td><td>跳转到上一次浏览的代码处</td></tr><tr><td><code>Alt + 右箭头</code></td><td>跳转到下一次浏览的代码处</td></tr><tr><td><code>Ctrl + Shift + F11</code></td><td>为代码标记(取消)书签</td></tr><tr><td><code>Ctrl + Shift + Alt + F11</code></td><td>为代码标记(取消)带编号书签 , 通过 Ctrl + 编号 进行跳转</td></tr><tr><td><code>Alt+Shift+M</code></td><td>重复代码快速重构</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;设置&quot;&gt;设置&lt;/h2&gt;
&lt;p&gt;智能友好提示导入类&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Settings——&amp;gt;Editor——&amp;gt;General——&amp;gt;Auto Import——&amp;gt; [√] Add unambiguous imports on the fly&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;快捷键&quot;&gt;快捷键&lt;/h2&gt;</summary>
    
    
    
    <category term="工具" scheme="https://goofyww.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://goofyww.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
